//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CompanyModel", "FK_Employee_Department", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MVC3_MasterDetailsUI.Models.Department), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MVC3_MasterDetailsUI.Models.Employee), true)]

#endregion

namespace MVC3_MasterDetailsUI.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CompanyEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CompanyEntities object using the connection string found in the 'CompanyEntities' section of the application configuration file.
        /// </summary>
        public CompanyEntities() : base("name=CompanyEntities", "CompanyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CompanyEntities object.
        /// </summary>
        public CompanyEntities(string connectionString) : base(connectionString, "CompanyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CompanyEntities object.
        /// </summary>
        public CompanyEntities(EntityConnection connection) : base(connection, "CompanyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Department> Departments
        {
            get
            {
                if ((_Departments == null))
                {
                    _Departments = base.CreateObjectSet<Department>("Departments");
                }
                return _Departments;
            }
        }
        private ObjectSet<Department> _Departments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeIdentity> EmployeeIdentities
        {
            get
            {
                if ((_EmployeeIdentities == null))
                {
                    _EmployeeIdentities = base.CreateObjectSet<EmployeeIdentity>("EmployeeIdentities");
                }
                return _EmployeeIdentities;
            }
        }
        private ObjectSet<EmployeeIdentity> _EmployeeIdentities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeInfo> EmployeeInfoes
        {
            get
            {
                if ((_EmployeeInfoes == null))
                {
                    _EmployeeInfoes = base.CreateObjectSet<EmployeeInfo>("EmployeeInfoes");
                }
                return _EmployeeInfoes;
            }
        }
        private ObjectSet<EmployeeInfo> _EmployeeInfoes;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Departments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDepartments(Department department)
        {
            base.AddObject("Departments", department);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeIdentities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeIdentities(EmployeeIdentity employeeIdentity)
        {
            base.AddObject("EmployeeIdentities", employeeIdentity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeInfoes(EmployeeInfo employeeInfo)
        {
            base.AddObject("EmployeeInfoes", employeeInfo);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CompanyModel", Name="Department")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Department : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Department object.
        /// </summary>
        /// <param name="deptNo">Initial value of the DeptNo property.</param>
        /// <param name="dname">Initial value of the Dname property.</param>
        /// <param name="location">Initial value of the Location property.</param>
        public static Department CreateDepartment(global::System.Int32 deptNo, global::System.String dname, global::System.String location)
        {
            Department department = new Department();
            department.DeptNo = deptNo;
            department.Dname = dname;
            department.Location = location;
            return department;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeptNo
        {
            get
            {
                return _DeptNo;
            }
            set
            {
                if (_DeptNo != value)
                {
                    OnDeptNoChanging(value);
                    ReportPropertyChanging("DeptNo");
                    _DeptNo = StructuralObject.SetValidValue(value, "DeptNo");
                    ReportPropertyChanged("DeptNo");
                    OnDeptNoChanged();
                }
            }
        }
        private global::System.Int32 _DeptNo;
        partial void OnDeptNoChanging(global::System.Int32 value);
        partial void OnDeptNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Dname
        {
            get
            {
                return _Dname;
            }
            set
            {
                OnDnameChanging(value);
                ReportPropertyChanging("Dname");
                _Dname = StructuralObject.SetValidValue(value, false, "Dname");
                ReportPropertyChanged("Dname");
                OnDnameChanged();
            }
        }
        private global::System.String _Dname;
        partial void OnDnameChanging(global::System.String value);
        partial void OnDnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, false, "Location");
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CompanyModel", "FK_Employee_Department", "Employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("CompanyModel.FK_Employee_Department", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("CompanyModel.FK_Employee_Department", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CompanyModel", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="empNo">Initial value of the EmpNo property.</param>
        /// <param name="empName">Initial value of the EmpName property.</param>
        /// <param name="salary">Initial value of the Salary property.</param>
        /// <param name="deptNo">Initial value of the DeptNo property.</param>
        public static Employee CreateEmployee(global::System.Int32 empNo, global::System.String empName, global::System.Int32 salary, global::System.Int32 deptNo)
        {
            Employee employee = new Employee();
            employee.EmpNo = empNo;
            employee.EmpName = empName;
            employee.Salary = salary;
            employee.DeptNo = deptNo;
            return employee;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpNo
        {
            get
            {
                return _EmpNo;
            }
            set
            {
                if (_EmpNo != value)
                {
                    OnEmpNoChanging(value);
                    ReportPropertyChanging("EmpNo");
                    _EmpNo = StructuralObject.SetValidValue(value, "EmpNo");
                    ReportPropertyChanged("EmpNo");
                    OnEmpNoChanged();
                }
            }
        }
        private global::System.Int32 _EmpNo;
        partial void OnEmpNoChanging(global::System.Int32 value);
        partial void OnEmpNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmpName
        {
            get
            {
                return _EmpName;
            }
            set
            {
                OnEmpNameChanging(value);
                ReportPropertyChanging("EmpName");
                _EmpName = StructuralObject.SetValidValue(value, false, "EmpName");
                ReportPropertyChanged("EmpName");
                OnEmpNameChanged();
            }
        }
        private global::System.String _EmpName;
        partial void OnEmpNameChanging(global::System.String value);
        partial void OnEmpNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Salary
        {
            get
            {
                return _Salary;
            }
            set
            {
                OnSalaryChanging(value);
                ReportPropertyChanging("Salary");
                _Salary = StructuralObject.SetValidValue(value, "Salary");
                ReportPropertyChanged("Salary");
                OnSalaryChanged();
            }
        }
        private global::System.Int32 _Salary;
        partial void OnSalaryChanging(global::System.Int32 value);
        partial void OnSalaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeptNo
        {
            get
            {
                return _DeptNo;
            }
            set
            {
                OnDeptNoChanging(value);
                ReportPropertyChanging("DeptNo");
                _DeptNo = StructuralObject.SetValidValue(value, "DeptNo");
                ReportPropertyChanged("DeptNo");
                OnDeptNoChanged();
            }
        }
        private global::System.Int32 _DeptNo;
        partial void OnDeptNoChanging(global::System.Int32 value);
        partial void OnDeptNoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CompanyModel", "FK_Employee_Department", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("CompanyModel.FK_Employee_Department", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("CompanyModel.FK_Employee_Department", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("CompanyModel.FK_Employee_Department", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("CompanyModel.FK_Employee_Department", "Department", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CompanyModel", Name="EmployeeIdentity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeIdentity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeIdentity object.
        /// </summary>
        /// <param name="empNo">Initial value of the EmpNo property.</param>
        /// <param name="empName">Initial value of the EmpName property.</param>
        public static EmployeeIdentity CreateEmployeeIdentity(global::System.Int32 empNo, global::System.String empName)
        {
            EmployeeIdentity employeeIdentity = new EmployeeIdentity();
            employeeIdentity.EmpNo = empNo;
            employeeIdentity.EmpName = empName;
            return employeeIdentity;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpNo
        {
            get
            {
                return _EmpNo;
            }
            set
            {
                if (_EmpNo != value)
                {
                    OnEmpNoChanging(value);
                    ReportPropertyChanging("EmpNo");
                    _EmpNo = StructuralObject.SetValidValue(value, "EmpNo");
                    ReportPropertyChanged("EmpNo");
                    OnEmpNoChanged();
                }
            }
        }
        private global::System.Int32 _EmpNo;
        partial void OnEmpNoChanging(global::System.Int32 value);
        partial void OnEmpNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmpName
        {
            get
            {
                return _EmpName;
            }
            set
            {
                OnEmpNameChanging(value);
                ReportPropertyChanging("EmpName");
                _EmpName = StructuralObject.SetValidValue(value, false, "EmpName");
                ReportPropertyChanged("EmpName");
                OnEmpNameChanged();
            }
        }
        private global::System.String _EmpName;
        partial void OnEmpNameChanging(global::System.String value);
        partial void OnEmpNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CompanyModel", Name="EmployeeInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeInfo object.
        /// </summary>
        /// <param name="empNo">Initial value of the EmpNo property.</param>
        /// <param name="empName">Initial value of the EmpName property.</param>
        /// <param name="salary">Initial value of the Salary property.</param>
        /// <param name="deptName">Initial value of the DeptName property.</param>
        /// <param name="designation">Initial value of the Designation property.</param>
        public static EmployeeInfo CreateEmployeeInfo(global::System.Int32 empNo, global::System.String empName, global::System.Decimal salary, global::System.String deptName, global::System.String designation)
        {
            EmployeeInfo employeeInfo = new EmployeeInfo();
            employeeInfo.EmpNo = empNo;
            employeeInfo.EmpName = empName;
            employeeInfo.Salary = salary;
            employeeInfo.DeptName = deptName;
            employeeInfo.Designation = designation;
            return employeeInfo;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpNo
        {
            get
            {
                return _EmpNo;
            }
            set
            {
                if (_EmpNo != value)
                {
                    OnEmpNoChanging(value);
                    ReportPropertyChanging("EmpNo");
                    _EmpNo = StructuralObject.SetValidValue(value, "EmpNo");
                    ReportPropertyChanged("EmpNo");
                    OnEmpNoChanged();
                }
            }
        }
        private global::System.Int32 _EmpNo;
        partial void OnEmpNoChanging(global::System.Int32 value);
        partial void OnEmpNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmpName
        {
            get
            {
                return _EmpName;
            }
            set
            {
                OnEmpNameChanging(value);
                ReportPropertyChanging("EmpName");
                _EmpName = StructuralObject.SetValidValue(value, false, "EmpName");
                ReportPropertyChanged("EmpName");
                OnEmpNameChanged();
            }
        }
        private global::System.String _EmpName;
        partial void OnEmpNameChanging(global::System.String value);
        partial void OnEmpNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Salary
        {
            get
            {
                return _Salary;
            }
            set
            {
                OnSalaryChanging(value);
                ReportPropertyChanging("Salary");
                _Salary = StructuralObject.SetValidValue(value, "Salary");
                ReportPropertyChanged("Salary");
                OnSalaryChanged();
            }
        }
        private global::System.Decimal _Salary;
        partial void OnSalaryChanging(global::System.Decimal value);
        partial void OnSalaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeptName
        {
            get
            {
                return _DeptName;
            }
            set
            {
                OnDeptNameChanging(value);
                ReportPropertyChanging("DeptName");
                _DeptName = StructuralObject.SetValidValue(value, false, "DeptName");
                ReportPropertyChanged("DeptName");
                OnDeptNameChanged();
            }
        }
        private global::System.String _DeptName;
        partial void OnDeptNameChanging(global::System.String value);
        partial void OnDeptNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Designation
        {
            get
            {
                return _Designation;
            }
            set
            {
                OnDesignationChanging(value);
                ReportPropertyChanging("Designation");
                _Designation = StructuralObject.SetValidValue(value, false, "Designation");
                ReportPropertyChanged("Designation");
                OnDesignationChanged();
            }
        }
        private global::System.String _Designation;
        partial void OnDesignationChanging(global::System.String value);
        partial void OnDesignationChanged();

        #endregion

    }

    #endregion

}
